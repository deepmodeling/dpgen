#!/usr/bin/env python3

import os, sys, json, glob, re
import numpy as np

def count (fname) :
    fp = open(fname, 'r')
    jdata = json.load(fp)
    systems = jdata['systems']

    cc = 0
    for ii in systems :
        d = np.loadtxt(os.path.join(ii, 'energy.raw'))
        cc += d.size
        print(ii, d.size, cc)
    return cc

def line_count(fname) :
    return sum(1 for line in open(fname))

def count_by_sys(paraname, itername) :
    j_para = json.load(open(paraname, 'r'))
    j_iter = json.load(open(itername, 'r'))
    
    sys_configs = j_para['sys_configs']
    systems = j_iter['systems']
    count_data = np.zeros(len(sys_configs), dtype = int)
    count_traj = np.zeros(len(sys_configs), dtype = int)

    cwd = os.getcwd()
    iters = glob.glob('iter.*')
    for ii in iters :
        fp_path = os.path.join(ii, '02.fp')
        widecard_cand = os.path.join(fp_path, 'candidate.shuffled.*.out')
        cands = glob.glob(widecard_cand)
        for jj_cand in cands :
            jj_rest = re.sub('candidate', 'rest', jj_cand)
            sys_idx = int(jj_rest.split('/')[-1].split('.')[-2])
            cc_cf = line_count(jj_cand)
            cc_rf = line_count(jj_rest)
            count_traj[sys_idx] += cc_cf + cc_rf        

    for ii in systems :
        if not (('data.' in ii) and ('iter.' in ii)) :
            continue
        # print(ii)
        # get sys_idx
        sys_idx_str = (ii.split('/')[-1].split('.')[-1])
        sys_idx = int(sys_idx_str)
        # count data
        ener_file = os.path.join(ii, 'energy.raw')
        cc_ef = line_count(ener_file)
        count_data[sys_idx] += cc_ef

    for ii in range(len(sys_configs)) :
        print("%s \t %d %d" % (sys_configs[ii], count_data[ii], count_traj[ii]))


count_by_sys('param.json', sys.argv[1])
# print(cc)
