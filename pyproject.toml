[build-system]
requires = ["setuptools>=61", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "dpgen"
dynamic = ["version"]
description = "DP-GEN: The deep potential generator"
authors = [
  {name = "DeepModeling"},
  {name = "Han Wang", email = "wang_han@iapcm.ac.cn"},
]
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
]
dependencies = [
    'numpy>=1.14.3',
    'dpdata>=0.2.16',
    'pymatgen>=2022.11.1',
    'ase',
    'monty>2.0.0',
    'paramiko',
    'custodian',
    'GromacsWrapper>=0.8.0',
    'dpdispatcher>=0.3.11',
    'netCDF4',
    'dargs>=0.4.0',
    'h5py',
    'pymatgen-analysis-defects',
    'openbabel-wheel',
    'packaging',
]
requires-python = ">=3.9"
readme = "README.md"
keywords = ["deep potential generator", "active learning", "deepmd-kit"]

[project.urls]
Homepage = "https://github.com/deepmodeling/dpgen"
documentation = "https://docs.deepmodeling.com/projects/dpgen"
repository = "https://github.com/deepmodeling/dpgen"

[project.scripts]
dpgen = "dpgen.main:main"

[project.entry-points."dpgui"]
"DP-GEN Run" = "dpgen.generator.arginfo:run_jdata_arginfo"
"DP-GEN Run Machine" = "dpgen.generator.arginfo:run_jdata_arginfo"
"DP-GEN Simplify" = "dpgen.simplify.arginfo:simplify_jdata_arginfo"
"DP-GEN Simplify Machine" = "dpgen.simplify.arginfo:simplify_mdata_arginfo"
"DP-GEN init_bulk" = "dpgen.data.arginfo:init_bulk_jdata_arginfo"
"DP-GEN init_bulk Machine" = "dpgen.data.arginfo:init_bulk_mdata_arginfo"
"DP-GEN init_surf" = "dpgen.data.arginfo:init_surf_jdata_arginfo"
"DP-GEN init_surf Machine" = "dpgen.data.arginfo:init_surf_mdata_arginfo"
"DP-GEN init_reaction" = "dpgen.data.arginfo:init_reaction_jdata_arginfo"
"DP-GEN init_reaction Machine" = "dpgen.data.arginfo:init_reaction_mdata_arginfo"

[project.optional-dependencies]
test = [
    "dpgui",
    "coverage",
    "pymatgen-analysis-defects<2023.08.22",
    # To be fixed: https://github.com/Becksteinlab/GromacsWrapper/issues/263
    'setuptools; python_version >= "3.12"',
]
gui = [
    "dpgui",
]

[tool.setuptools.packages.find]
include = ["dpgen*"]

[tool.setuptools_scm]
write_to = "dpgen/_version.py"

[tool.isort]
profile = "black"

[tool.ruff]
select = [
    "I", # isort
    "E", # errors
    "F", # pyflakes
    "D", # pydocstyle
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long
    "F841", # local variable is assigned to but never used
    "E741", # ambiguous variable name
    "E402", # module level import not at top of file
    "D413", # missing blank line after last section
    "D416", # section name should end with a colon
    "D203", # 1 blank line required before class docstring
    "D107", # missing docstring in __init__
    "D213", # multi-line docstring summary should start at the second line
    "D100", # TODO: missing docstring in public module
    "D101", # TODO: missing docstring in public class
    "D102", # TODO: missing docstring in public method
    "D103", # TODO: missing docstring in public function
    "D104", # TODO: missing docstring in public package
    "D105", # TODO: missing docstring in magic method
    "D205", # 1 blank line required between summary line and description
    "D401", # TODO: first line should be in imperative mood
    "D404", # TODO: first word of the docstring should not be This
]
ignore-init-module-imports = true

[tool.ruff.pydocstyle]
convention = "numpy"
