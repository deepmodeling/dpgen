[build-system]
requires = ["setuptools>=61", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "dpgen"
dynamic = ["version"]
description = "DP-GEN: The deep potential generator"
authors = [
  {name = "DeepModeling"},
  {name = "Han Wang", email = "wang_han@iapcm.ac.cn"},
]
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
]
dependencies = [
    'numpy>=1.14.3',
    'dpdata>=0.2.6,!=0.2.11',
    'pymatgen>=2022.11.1',
    'ase',
    'monty>2.0.0',
    'paramiko',
    'custodian',
    'GromacsWrapper>=0.8.0',
    'dpdispatcher>=0.3.11',
    'netCDF4',
    'dargs>=0.2.9',
    'h5py',
    'pymatgen-analysis-defects',
    'openbabel-wheel',
    'packaging',
]
requires-python = ">=3.8"
readme = "README.md"
keywords = ["deep potential generator", "active learning", "deepmd-kit"]

[project.urls]
Homepage = "https://github.com/deepmodeling/dpgen"
documentation = "https://docs.deepmodeling.com/projects/dpgen"
repository = "https://github.com/deepmodeling/dpgen"

[project.entry-points.console_scripts]
dpgen = "dpgen.main:main"

[tool.setuptools.packages.find]
include = ["dpgen*"]

[tool.setuptools_scm]
write_to = "dpgen/_version.py"

[tool.isort]
profile = "black"

[tool.ruff]
target-version = "py37"
select = [
    "I", # isort
]
